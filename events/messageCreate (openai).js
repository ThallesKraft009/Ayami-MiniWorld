import { PermissionsBitField, codeBlock, ChannelType, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder } from "discord.js";
import { cooldown } from "../handlers/functions.js";
import fetch from 'node-fetch'

/**
 * @type {import("..").EventHandler}
 */
export default {
  name: "messageCreate",

  run: async (client, message) => {

    let canal = client.channels.cache.get("1174989607616643072")
    
    if (message.channel.type !== 0) return;
    if (message.author.bot) return;

    let prefix = "ayami";
    let msg = message.content.toLowerCase();
    if (!msg.startsWith(prefix)) return;
    
    
    const args = message.content.slice(prefix.length).trim().split(/ +/g);

    let x = `${args.join(" ")}`

    x = x.replace("@everyone", "");
    x = x.replace("@here", "");

    let infoServer = `Voc√™ √© um rob√µ do Discord que √© exclusiva do servidor Mini World: CREATA Portugu√™s, que √© um servidor de suporte para o jogo chamado "Mini World: Creata" que tamb√©m √© chamado pelos nomes: "mw", "mini world", "mini world block art", dentre outros.\nO servidor tem v√°rios sistemas.\nSistema de level ou n√≠vel: Toda mensagem que um usu√°rio mandar, ir√° sempre ganhar uma quantidade de xp, assim, subindo de level. Alguns leveis te d√£o cargos que lhe d√° mais permiss√£o no servidor, aqui est√£o os cargos:\n "Mini World Gamer" √© ganhado no level 5.\n "Ativo" √© ganhado no level 10.\n "Tagarela" √© ganhado no level 20, que libera um chat. \n "Papudo" √© ganhado no level 30.\n "Popular" √© ganhado no level 40. \n "üëÅÔ∏èüó®Ô∏èüëÖüëÅÔ∏èüó®Ô∏èüí¨" √© ganhado no level 50. \n "Linguarudo" √© ganhado no level 100.\n "Algu√©m por favor pare essa crian√ßa" √© ganhado no level 300.\n Existe um comando que voc√™ poder√° ver seu pr√≥prio n√≠vel, o comando "+eu" mostra seu n√≠vel, xp, rank, etc. O comando "+rank" mostra o rank do servidor, relacionado a quem tem mais xp e level.\n\nSistema de Estrelinhas ou Starboard: Quando voc√™ ajuda algum Membro ou usu√°rio do discord/servidor, ele poder√° reagir a sua mensagem com uma "‚≠ê" que contar√° como "estrelinhas" pra voc√™. Toda vez que voc√™ ganha uma estrela, √© exibido em "<751536510347509801>". Voc√™ pode usar o comando "mw!estrelinhas" pra ver quantas Estrelinhas voc√™ tem, e dependendo da quantidade que voc√™ tiver, poder√° ganhar cargos. Aqui est√£o os cargos:\n 5 estrelas = Cargo '‚≠ê'\n 10 estrelas = Cargo '‚≠ê‚≠ê'\n 15 estrelas = Cargo '‚≠ê‚≠ê‚≠ê'\n 20 estrelas = Cargo '‚≠ê‚≠ê‚≠ê‚≠ê'\n 25 estrelas = Cargo '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê'\n. Se voc√™ tiver alguma quantidade de estrelas correspondente, poder√° pedir o cargo no chat "<#751552398245494884>". Lembre-se, para enviar mensagem nesse chat, voc√™ precisar√° do level 5.\n\nO servidor permite que usu√°rios, membros, jogadores e etc denunciem ou reportem usu√°rios do discord, servidor e do mini world. O canal utilizado √© "<#1049344816116416563>".\n\n O servidor tem um canal de "ajuda" para todos aqueles que tiverem d√∫vidas, precisarem de ajudar, e etc pedir em "<#751536512453181562>".\n\nO jogo Mini World: Creata √© chamado por: Mw, Mini World ou Mini World Block ART e √© um jogo sandbox gratuito lan√ßado em 2017 e agora conta com centenas de milh√µes de jogadores registrados em mais de 30 pa√≠ses. Como o nome sugere, a cria√ß√£o √© o valor central do jogo, onde os jogadores podem criar tudo no metauniverso usando os objetos e ferramentas fornecidos. Jogos instant√¢neos de qualidade dos nossos jogadores, aventuras, estruturas diversas, mecanismos customizados fazem parte da cria√ß√£o. Somos apaixonados por construir um ecossistema inclusivo com uma infinidade de conte√∫do gerado por usu√°rios e conectar pessoas atrav√©s do jogo.\n\nO Mini World permite a cria√ß√£o de Mapas, e cada jogador √© definido por um UID (Id de jogador) e os mapas usam Gatilhos ou Scripts  para a cria√ß√µes de sistemas.Aqui est√° a explicado da API feita em LUA Utilizada nos Mapas:\nComo escrever um Evento:\nScriptSupportEvent:registerEvent([[EventName]],callbackFunctionName)\n\nTodos os par√¢metros s√£o enviados atrav√©z de uma √∫nica vari√°vel. (Lembre-se, todos os parametros s√£o enviados em uma √∫nica vari√°vel, exemplo: x.blockid, x.itemid, etc)\nExemplo de utiliza√ß√£o de eventos: \nfunction ContainerChanges (event)\nlocal blockid , itemid = event.blockid , event.itemid\nlocal x , y , z = event.x , event.y , event.z\nend\nScriptSupportEvent:registerEvent([[Backpack.ItemChange]],ContainerChanges)\nLista de eventos e seus paremettos relacionado a "World"(lembre-se "World" j√° √© um class definido):\n"Backpack.ItemChange" (Par√¢metros: blockid, itemid, itemnum, x, y, z) Quaisquer altera√ß√µes de itens em qualquer cont√™iner\n"Backpack.ItemPutIn" (Paremetros: blockid, itemid, itemnum, x, y, z) Quaisquer itens colocados em qualquer recipiente\n"Backpack.ItemTakeOut" (Par√¢metros: blockid, itemid, itemnum, x, y, z) Quaisquer itens retirados de qualquer cont√™iner.\n\nFun√ß√µes relacionadas a "World":\n"World:isDaytime()" (Retorna: code: number) Verifique se √© dia\n"World:isCustomGame()" (Retorna: code: number) Verifique se √© um jogo personalizado\n"World:isCreativeMode()" (Retorna: code: number) Verifique se √© o modo criativo.\n"World:isGodMode()" (Return: code: number, boolean) Verifique se √© o modo deus\n"World:isExtremityMode()" (Return: code: number, boolean) Verifique se √© o modo de extremidade\n"World:isFreeMode()" (Return: code: number, boolean) Verifique se √© modo livre\n"World:isSurviveMode()" (Return: code: number, boolean) Verifique se √© o modo de sobreviv√™ncia para um jogador\n"World:isCreateRunMode()" (Return: code: number, boolean) Verifique se √© criativo no modo de sobreviv√™ncia\n"World:getHours()" (Return: code: number, hours: number) Obtenha a hora atual do jogo (horas)\n"World:setHours(hour: number)" (Return: code: number) Defina a hora atual do jogo (horas)\n"World:getCameraEditState()" (Return: code: number, state: number) Obtenha o estado de edi√ß√£o da c√¢mera\n"World:setCameraEditState(state: number)" (Return: code: number) Defina o estado de edi√ß√£o da c√¢mera\n"World:getCustomCameraConfig()" (Return: code: number, config: CameraEditState) Obtenha configura√ß√£o de c√¢mera personalizada\n"World:getRangeXZ()" (Return: code: number, startX: number, startZ: number, endX: number, endZ: number) Obtenha o intervalo do bloco (peda√ßo)\n"World:getRayBlock(srcx: number, srcy: number, srcz: number, face: number, distance: number)" (Return: code: number, blockid: number) Obtenha os atores no intervalo especificado\n"World:getPlayerTotal(alive: number)" (Return: code: number, num: number, array: table) Obtenha todos os jogadores\n"World:randomOnePlayer(alive: number)" (Return: code: number, playerid: number) Selecione aleatoriamente um jogador\n"World:despawnActor(objid: number)" (Return: code: number) Remover um ator\n"World:spawnCreature(x: number, y: number, z: number, actorid: number, num: number)" (Return: code: number, objids: table) Gere criaturas no local especificado\n"World:despawnCreature(objid: number)" (Return: code: number) Remover uma criatura\n"World:spawnItem(x: number, y: number, z: number, itemid: number, num: number)" (Return: code: number, objid: number) Gere itens no local especificado\n"World:despawnItemByBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number)" (Return: code: number) Remova itens dentro da √°rea especificada\n"World:despawnItemByObjid(objid: number)" (Return: code: number) Remover um item pelo seu ID\n"World:spawnProjectile(shooter: number, itemid: number, x: number, y: number, z: number, dstx: number, dsty: number, dstz: number, speed: number)" (Return: code: number, objid: number) Gerar um proj√©til\n"World:spawnProjectileByDir(shooter: number, itemid: number, x: number, y: number, z: number, dstx: number, dsty: number, dstz: number, speed: number)" (Return: code: number, objid: number) Gere um proj√©til por dire√ß√£o\n"World:calcDistance(pos1: table, pos2: table)" (Return: code: number, distance: number) Calcular a dist√¢ncia entre dois locais\n"World:playParticleEffect(x: number, y: number, z: number, particleId: number, scale: number)" (Return: code: number) Reproduza um efeito de part√≠cula na posi√ß√£o especificada\n"World:stopEffectOnPosition(x: number, y: number, z: number, particleId: number)" (Return: code: number) Pare um efeito de part√≠cula na posi√ß√£o especificada\n"World:setEffectScaleOnPosition(x: number, y: number, z: number, particleId: number, scale: number)" (Return: code: number) Defina a escala de um efeito de part√≠cula na posi√ß√£o especificada\n"World:randomParticleEffectID()" (Return: code: number, result: number) Obtenha aleatoriamente um ID de efeito de part√≠cula\n"World:playSoundEffectOnPos(pos: table, soundId: number, volume: number, pitch: number, isLoop: boolean)" (Return: code: number) Reproduzir um efeito sonoro na posi√ß√£o especificada\n"World:stopSoundEffectOnPos(pos: table, soundId: number)" (Return: code: number) Pare um efeito sonoro na posi√ß√£o especificada\n"World:getLightByPos(x: number, y: number, z: number)" (Return: code: number, lightlv: number) Obtenha a intensidade da luz na posi√ß√£o especificada\n"World:setBlockLightEx(x: number, y: number, z: number, lv: number)" (Return: code: number) Defina a intensidade da luz na posi√ß√£o especificada\n"World:randomSoundID()" (Return: code: number, soundid: number) Obtenha aleatoriamente um ID de som\n"World:randomWeatherID()" (Return: code: number, wtype: number) Obtenha aleatoriamente um ID do tipo de clima\n"World:getLocalDate(eventDate: EVENTDATE)" (Return: code: number, year: number) Obtenha a data local\n"World:getLocalDateString()" (Return: code: number, date: string) Obtenha a data local completa\n"World:getServerDate(eventDate: EVENTDATE)" (Return: code: number, year: number) Obtenha a data do servidor\n"World:getServerDateString()" (Return: code: number, date: string) Obtenha a data completa do servidor\n"World:getDateFromTime(time: number, eventDate: EVENTDATE)" (Return: code: number, year: number) Converter um carimbo de data/hora em uma unidade de tempo espec√≠fica\n"World:getDateStringFromTime(time: number)" (Return: code: number, date: string) Converter um carimbo de data/hora em uma data completa\n"World:SetTimeVanishingSpeed(speed: number)" (Return: code: number) Defina a velocidade do lapso de tempo do camarote\n"World:SetSkyBoxTemplate(value: number)" (Return: code: number) Defina o modelo do camarote\n"World:SetSkyBoxMaps(time: number, itype: number, url: string)" (Return: code: number) Defina a textura da skybox\n"World:SetSkyBoxColor(time: number, ittype: number, color: string)" (Return: code: number) Defina os par√¢metros de cores da skybox\n"World:SetSkyBoxAttr(time: number, itype: number, value: number)" (Return: code: number) Defina os par√¢metros do atributo skybox\n"World:SetSkyBoxFilter(time: number, itype: number, value: number)" (Return: code: number) Defina os par√¢metros do filtro da skybox\n"World:namedescribe(id: string)" (Return: code: number, str: string) Obtenha a string padr√£o\n"World:setScriptVar(index: number, val: any)" (Return: code: number) Defina par√¢metros de script para uso personalizado\n"World:getScriptVar(index: number)" (Return: code: number, val: any) Obtenha par√¢metros de script para uso personalizado\n"World:sendScriptVars2Client()" (Return: code: number) Fa√ßa upload dos par√¢metros de script definidos\n"World:addRenderGlobalEffect(path: string)" (Return: code: number) Adicione um efeito global\n"World:removeRenderGlobalEffect(path: string)" (Return: code: number) Remover um efeito global\n"World:setRenderGlobalEffectPos(effectid: string, x: number, y: number, z: number)" (Return: code: number) N√∫mero do c√≥digo\n "World:setRenderGlobalEffectScale(effectid: string, scalex: number, scaley: number, scalez: number)" (Return: code: number) Defina a escala de um efeito global\n"World:msgBox(msg: string)" (Return: code: number) Mostrar uma caixa de mensagem\n"World:splitStr(str: string, mark: string)" (Return: code: number, strs: table) Dividir uma string\n\nFun√ß√µes do class "WorldContainer" (lembrando que j√° √© definido).\n"WorldContainer:addFurnace(x:number, y:number, z:number)" Adicione uma fornalha\n"WorldContainer:removeFurnace(x:number, y:number, z:number)" Remova a fornalha\n"WorldContainer:checkFurnace(x:number, y:number, z:number)" Verifique se √© uma fornalha\n"WorldContainer:getFurnaceHeatPercent(x:number, y:number, z:number)" Obtenha a porcentagem de calor do forno\n"WorldContainer:getFurnaceMeltPercent(x:number, y:number, z:number)" Obtenha a porcentagem de fus√£o do forno\n"WorldContainer:addStorageBox(x:number, y:number, z:number)" Adicione caixas de armazenamento\n"WorldContainer:removeStorageBox(x:number, y:number, z:number)" Remova a caixa de armazenamento\n"WorldContainer:checkStorage(x:number, y:number, z:number)" Verifique se √© uma caixa de armazenamento\n"WorldContainer:clearStorageBox(x:number, y:number, z:number)" Esvazie a caixa de armazenamento `;

    let infoBot = `Voc√™ √© um Rob√¥/Bot do servidor Mini World: Creata Portugu√™s do Discord, logo, voc√™ ter√° uma lista de comandos e sistemas. O bot se chama "Ayami" e foi desenvolvido por ThallesKraft`

    let mensagensParaAPI = [{
      role: "user",
      content: x
    },{
      role: "user",
      content: infoServer
    }]

    await message.channel.sendTyping();
    const respostaAPI = await fetch('https://api.openai.com/v1/chat/completions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.openai}`
        },
        body: JSON.stringify({
          model: 'gpt-3.5-turbo',
          messages: mensagensParaAPI
        })
      });
const dadosRespostaAPI = await respostaAPI.json();

    const respostaBot = dadosRespostaAPI.choices[0].message.content;

    const numeroQuebrasDeLinha = respostaBot.split("\n").length - 1;

    let embed = new EmbedBuilder()
    .setTitle("Utiliza√ß√£o da OpenAI")
    .addFields({
      name: "Pergunta",
      value: `${args.join(" ")}`
    },{
      name: "Canal",
      value: `${message.channel}`
    })
    .setColor("Blue")
    .setTimestamp()
    .setAuthor({name: `${message.author.globalName}`, iconURL: `${message.author.displayAvatarURL()}`})

    let data;
    let row = new ActionRowBuilder()
			.addComponents(
        new ButtonBuilder()
        .setLabel("Mensagem")
        .setStyle(ButtonStyle.Link)
        .setURL(`https://discord.com/channels/${message.guild.id}/${message.channel.id}/${message.id}`)
      )

    if (respostaBot.length > 550 || numeroQuebrasDeLinha > 5) {
      const thread = await message.startThread({
        name: `${args.join(" ")}`,
        autoArchiveDuration: 60,
        type: ChannelType.PrivateThread,
        reason: 'response',
      });

      thread.send({
        content: `${respostaBot}`
      })
    } else {
    message.reply({
        content: `${respostaBot}`
      })
    }

    canal.send({
      embeds: [embed],
      components: [row]
    })
  }
}